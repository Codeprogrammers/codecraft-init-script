#!/bin/bash
# /etc/init.d/minecraft
# version 0.1.0 2011-11-07 (YYYY-MM-DD)

### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Starts the minecraft server
### END INIT INFO


#Settings
SERVICE='craftbukkit.jar'
USERNAME='minecraft'
SCREEN_NAME='codecraft'
BUILD='b1337'
MC_PATH="/mnt/codecraft/servers/$BUILD"
RD_PATH="/mnt/codecraft/ramdisk"
WORLD_PATH='/mnt/codecraft/worlds'
WORLD_BACKUPPATH='/mnt/codecraft/archives/worlds'
SERVER_BACKUPPATH='/mnt/codecraft/archives/servers'
INVOCATION="java -Xms512M -Xmx2048M -jar craftbukkit.jar"
SAVE_OFF_MSG="SERVER BACKUP STARTING. Server going readonly..."
SAVE_ON_MSG="SERVER BACKUP ENDED. Server going read-write..."
STOP_MSG=""

ME=`whoami`
as_user() {
  if [ $ME == $USERNAME ] ; then
    bash -c "$1"
  else
    su - $USERNAME -c "$1"
  fi
}

mc_start() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "Tried to start but $SERVICE was already running!"
  else
    echo "$SERVICE was not running... starting."
    cd $MC_PATH
    as_user "cd $MC_PATH && screen -dmS $SCREEN_NAME $INVOCATION"
    sleep 7
    if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
    then
      echo "$SERVICE is now running."
    else
      echo "Could not start $SERVICE."
    fi
  fi
}

mc_saveoff() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "$SERVICE is running... suspending saves"
    as_user "screen -p 0 -S $SCREEN_NAME -X eval 'stuff \"say $SAVE_OFF_MSG\"\015'"
    as_user "screen -p 0 -S $SCREEN_NAME -X eval 'stuff \"save-off\"\015'"
    as_user "screen -p 0 -S $SCREEN_NAME -X eval 'stuff \"save-all\"\015'"
    sync
    sleep 10
  else
    echo "$SERVICE was not running. Not suspending saves."
  fi
}

mc_saveon() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE is running... re-enabling saves"
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"save-on\"\015'"
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"say $SAVE_ON_MSG\"\015'"
	else
    echo "$SERVICE was not running. Not resuming saves."
	fi
}

mc_stop() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "$SERVICE is running... stopping."
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"say $STOP_MSG\"\015'"
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"save-all\"\015'"
    sleep 10
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"stop\"\015'"
    sleep 7
  else
    echo "$SERVICE was not running."
  fi
  
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "$SERVICE could not be shut down... still running."
  else
    echo "$SERVICE is shut down."
  fi
}

mc_world_backup() {
  echo "Backing up Worlds"
  
  cd $WORLD_BACKUPPATH
  rm -f directory_list
  if [! ls | grep `date "+%Y.%m.%d"`]
  then
    as_user "mkdir `date "+%Y.%m.%d"`"
    as_user "ls -1r --group-directories-first > directory_list"   # List newest directory first
  else
    as_user "ls -1r --group-directories-first > directory_list"   # List newest directory first
  fi
  
  cd < directory_list | head -n1    # cd into most recently created directory
  rm -f directory_list
  if [! ls | grep `date "+%H:%M"`]
  then
    as_user "mkdir `date "+%H:%M"`"
    as_user "ls -1r --group-directories-first > directory_list"   # List newest directory first
  else
    as_user "ls -1r --group-directories-first > directory_list"   # List newest directory first
  fi
  
  tmp_WORLD_BACKUPPATH=`cat directory_list | head -n1`
  as_user "cp -r $WORLD_PATH $tmp_WORLD_BACKUPPATH"
  sleep 5
  
  if [du -c $WORLD_PATH | grep total] == [du -c $tmp_WORLD_BACKUPPATH | grep total]
  then
    echo "Backup Complete"
  else
    echo "Backup failed! The source and target contents do not match!"
  fi
}

mc_rd_start() {
# exit status from mcramdisk script will determine outcome here.
 if ./mcramdisk mount > /dev/null
 then
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "Tried to start but $SERVICE was already running!"
  else
    echo "$SERVICE was not running... starting."
    cd $MC_PATH
    # For now searching for folders in ramdisk
    if [ ! -d $RD_PATH/* ]
    then
     echo "$RD_PATH empty, prepping..."
# Commented because we only want the worlds in the ramdisk,
# not the whole server.
#     as_user "cp -R $MC_PATH/* $RD_PATH"
     # Populating ramdisk with worlds
     cd $WORLD_PATH
     for dir in *
     do
     # Determining if the folder is a world (has level.dat) or something we don't need.
     if [ -d "$dir" ] && [ -f "$dir/level.dat" ]
     then
      echo $dir
      # Copy the world from $WORLD_PATH (cd earlier in if statement)
      # to ramdisk ($RD_PATH)
      as_user "cp -R $dir $RD_PATH/"
      # Linking ramdisk to server directory
      # -F - Force is directory
      # -h - stops from searching directory?
      # -s - symbolic link
      # see "man ln" for more info
      as_user "ln -Fhs $RD_PATH/$dir $MC_PATH/$dir"
     fi
     done
    fi
    # Start server as normal.
    as_user "cd $MC_PATH && screen -dmS $SCREEN_NAME $INVOCATION"
    sleep 7
    if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
    then
      echo "$SERVICE is now running."
    else
      echo "Could not start $SERVICE."
    fi
  fi
 else
  echo "Cound not start $SERVICE, ramdisk could not be mounted"
 fi
}

mc_rd_save() {
 if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
 then
  echo "Saving ramdisk to disk."
  # Service is running, is it in $RD_PATH?
  if [ ! -f $RD_PATH/$SERVICE ]
  then
   # Service not in $RD_PATH, warn user.
   echo "Sorry, $SERVICE not in ramdisk!"
  else
   
   # Stop live saving by bukkit, initiate world save
   as_user "screen -p 0 -S $SCREEN_NAME -X eval 'stuff \"save-off\"\015'"
   as_user "screen -p 0 -S $SCREEN_NAME -X eval 'stuff \"save-all\"\015'"

   # Service found in $RD_PATH, start save.
   echo "$SERVICE being copied to disk"
   if [ -d $MC_PATH/world2 ]
   then
    # Previous save exists, delete
    as_user "rm -r $MCPATH/world2"
   fi
   if [ -d $MC_PATH/world ]
   then
    # Move current version to world2
    as_user "mv $MC_PATH/world/ $MC_PATH/world2/"
   fi
   
   as_user "cp -R $RD_PATH/* $MC_PATH/"

   # Start live saving by bukkit
   as_user "screen -p 0 -S codecraft -X eval 'stuff \"save-on\"\015'"
   
  fi
 else
  # Service not running, nothing to save
  echo "Nothing to save, $SERVICE is not running."
 fi
}

#Start-Stop here
case "$1" in
  start)
    mc_start
    ;;
  stop)
    mc_stop
    ;;
  restart)
    mc_stop
    mc_start
    ;;
  worldbackup)
    mc_saveoff
    mc_world_backup
    mc_saveon
    ;;
  status)
    if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
    then
      echo "$SERVICE is running."
    else
      echo "$SERVICE is not running."
    fi
    ;;
  start_rd)
    # Start a RD instance
    mc_rd_start
    ;;

  *)
  echo "Usage: /etc/init.d/minecraft {start|stop|worldbackup|status|restart}"
  exit 1
  ;;
esac

exit 0
