#!/bin/bash
# /etc/init.d/minecraft
# version 0.1.0 2011-11-07 (YYYY-MM-DD)

### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Starts the minecraft server
### END INIT INFO


#Settings
SERVICE='craftbukkit.jar'
USERNAME='minecraft'
SCREEN_NAME='codecraft'
BUILD='b1337'
MC_PATH="/mnt/codecraft/servers/$BUILD"
RD_PATH="/mnt/codecraft/ramdisk/$BUILD"
WORLD_PATH='/mnt/codecraft/worlds'
WORLD_BACKUPPATH='/mnt/codecraft/archives/worlds'
SERVER_BACKUPPATH='/mnt/codecraft/archives/servers'
INVOCATION="java -Xms512M -Xmx2048M -jar craftbukkit.jar"
SAVE_OFF_MSG="SERVER BACKUP STARTING. Server going readonly..."
SAVE_ON_MSG="SERVER BACKUP ENDED. Server going read-write..."
STOP_MSG=""

ME=`whoami`
as_user() {
  if [ $ME == $USERNAME ] ; then
    bash -c "$1"
  else
    su - $USERNAME -c "$1"
  fi
}

mc_start() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "Tried to start but $SERVICE was already running!"
  else
    echo "$SERVICE was not running... starting."
    cd $MCPATH
    as_user "cd $MC_PATH && screen -dmS $SCREEN_NAME $INVOCATION"
    sleep 7
    if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
    then
      echo "$SERVICE is now running."
    else
      echo "Could not start $SERVICE."
    fi
  fi
}

mc_saveoff() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "$SERVICE is running... suspending saves"
    as_user "screen -p 0 -S $SCREEN_NAME -X eval 'stuff \"say $SAVE_OFF_MSG\"\015'"
    as_user "screen -p 0 -S $SCREEN_NAME -X eval 'stuff \"save-off\"\015'"
    as_user "screen -p 0 -S $SCREEN_NAME -X eval 'stuff \"save-all\"\015'"
    sync
    sleep 10
  else
    echo "$SERVICE was not running. Not suspending saves."
  fi
}

mc_saveon() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE is running... re-enabling saves"
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"save-on\"\015'"
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"say $SAVE_ON_MSG\"\015'"
	else
    echo "$SERVICE was not running. Not resuming saves."
	fi
}

mc_stop() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "$SERVICE is running... stopping."
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"say $STOP_MSG\"\015'"
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"save-all\"\015'"
    sleep 10
    as_user "screen -p 0 -S codecraft -X eval 'stuff \"stop\"\015'"
    sleep 7
  else
    echo "$SERVICE was not running."
  fi
  
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "$SERVICE could not be shut down... still running."
  else
    echo "$SERVICE is shut down."
  fi
}

mc_world_backup() {
  echo "Backing up Worlds"
  
  cd $WORLD_BACKUPPATH
  rm -f directory_list
  if [! ls | grep `date "+%Y.%m.%d"`]
  then
    as_user "mkdir `date "+%Y.%m.%d"`"
    as_user "ls -1r --group-directories-first > directory_list"   # List newest directory first
  else
    as_user "ls -1r --group-directories-first > directory_list"   # List newest directory first
  fi
  
  cd < directory_list | head -n1    # cd into most recently created directory
  rm -f directory_list
  if [! ls | grep `date "+%H:%M"`]
  then
    as_user "mkdir `date "+%H:%M"`"
    as_user "ls -1r --group-directories-first > directory_list"   # List newest directory first
  else
    as_user "ls -1r --group-directories-first > directory_list"   # List newest directory first
  fi
  
  tmp_WORLD_BACKUPPATH=`cat directory_list | head -n1`
  as_user "cp -r $WORLD_PATH $tmp_WORLD_BACKUPPATH"
  sleep 5
  
  if [du -c $WORLD_PATH | grep total] == [du -c $tmp_WORLD_BACKUPPATH | grep total]
  then
    echo "Backup Complete"
  else
    echo "Backup failed! The source and target contents do not match!"
  fi
}


#Start-Stop here
case "$1" in
  start)
    mc_start
    ;;
  stop)
    mc_stop
    ;;
  restart)
    mc_stop
    mc_start
    ;;
  worldbackup)
    mc_saveoff
    mc_world_backup
    mc_saveon
    ;;
  status)
    if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
    then
      echo "$SERVICE is running."
    else
      echo "$SERVICE is not running."
    fi
    ;;

  *)
  echo "Usage: /etc/init.d/minecraft {start|stop|worldbackup|status|restart}"
  exit 1
  ;;
esac

exit 0
